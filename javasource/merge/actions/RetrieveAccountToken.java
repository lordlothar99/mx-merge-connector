// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package merge.actions;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

public class RetrieveAccountToken extends CustomJavaAction<java.lang.String>
{
	private java.lang.String publicToken;
	private java.lang.String apiKey;

	public RetrieveAccountToken(IContext context, java.lang.String publicToken, java.lang.String apiKey)
	{
		super(context);
		this.publicToken = publicToken;
		this.apiKey = apiKey;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		return retrieveAccountToken(this.publicToken, this.apiKey);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "RetrieveAccountToken";
	}

	// BEGIN EXTRA CODE
	/**
	 * @see "https://www.merge.dev/docs/linking-flow/get-started"
	 * @return account_token
	 */
	private String retrieveAccountToken(String publicToken, String apiKey) throws IOException, InterruptedException {

		HttpClient client = HttpClient.newHttpClient();
		URI uri = URI.create(String.format("https://api.merge.dev/api/integrations/account-token/%s", publicToken));

		HttpRequest request = HttpRequest.newBuilder(uri)
				.header("Authorization", String.format("Bearer %s", apiKey))
				.build();

		HttpResponse<String> account_token_result = client.send(request, HttpResponse.BodyHandlers.ofString());
		String account_token = new ObjectMapper().readValue(account_token_result.body(), ObjectNode.class).get("account_token").textValue();
		return account_token;
	}
	// END EXTRA CODE
}
