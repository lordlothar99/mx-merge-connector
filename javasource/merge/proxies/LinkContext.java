// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package merge.proxies;

public class LinkContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject linkContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Merge.LinkContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LinkToken("LinkToken"),
		PublicToken("PublicToken"),
		AccountToken("AccountToken"),
		LinkContext_MergeConfiguration("Merge.LinkContext_MergeConfiguration");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LinkContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Merge.LinkContext"));
	}

	protected LinkContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject linkContextMendixObject)
	{
		if (linkContextMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Merge.LinkContext", linkContextMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Merge.LinkContext");

		this.linkContextMendixObject = linkContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LinkContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static merge.proxies.LinkContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return merge.proxies.LinkContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static merge.proxies.LinkContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new merge.proxies.LinkContext(context, mendixObject);
	}

	public static merge.proxies.LinkContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return merge.proxies.LinkContext.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of LinkToken
	 * @param linktoken
	 */
	public final merge.proxies.LinkStatus getLinkToken()
	{
		return getLinkToken(getContext());
	}

	/**
	 * @param context
	 * @return value of LinkToken
	 */
	public final merge.proxies.LinkStatus getLinkToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LinkToken.toString());
		if (obj == null)
			return null;

		return merge.proxies.LinkStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LinkToken
	 * @param linktoken
	 */
	public final void setLinkToken(merge.proxies.LinkStatus linktoken)
	{
		setLinkToken(getContext(), linktoken);
	}

	/**
	 * Set value of LinkToken
	 * @param context
	 * @param linktoken
	 */
	public final void setLinkToken(com.mendix.systemwideinterfaces.core.IContext context, merge.proxies.LinkStatus linktoken)
	{
		if (linktoken != null)
			getMendixObject().setValue(context, MemberNames.LinkToken.toString(), linktoken.toString());
		else
			getMendixObject().setValue(context, MemberNames.LinkToken.toString(), null);
	}

	/**
	 * Set value of PublicToken
	 * @param publictoken
	 */
	public final merge.proxies.LinkStatus getPublicToken()
	{
		return getPublicToken(getContext());
	}

	/**
	 * @param context
	 * @return value of PublicToken
	 */
	public final merge.proxies.LinkStatus getPublicToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PublicToken.toString());
		if (obj == null)
			return null;

		return merge.proxies.LinkStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PublicToken
	 * @param publictoken
	 */
	public final void setPublicToken(merge.proxies.LinkStatus publictoken)
	{
		setPublicToken(getContext(), publictoken);
	}

	/**
	 * Set value of PublicToken
	 * @param context
	 * @param publictoken
	 */
	public final void setPublicToken(com.mendix.systemwideinterfaces.core.IContext context, merge.proxies.LinkStatus publictoken)
	{
		if (publictoken != null)
			getMendixObject().setValue(context, MemberNames.PublicToken.toString(), publictoken.toString());
		else
			getMendixObject().setValue(context, MemberNames.PublicToken.toString(), null);
	}

	/**
	 * Set value of AccountToken
	 * @param accounttoken
	 */
	public final merge.proxies.LinkStatus getAccountToken()
	{
		return getAccountToken(getContext());
	}

	/**
	 * @param context
	 * @return value of AccountToken
	 */
	public final merge.proxies.LinkStatus getAccountToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.AccountToken.toString());
		if (obj == null)
			return null;

		return merge.proxies.LinkStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of AccountToken
	 * @param accounttoken
	 */
	public final void setAccountToken(merge.proxies.LinkStatus accounttoken)
	{
		setAccountToken(getContext(), accounttoken);
	}

	/**
	 * Set value of AccountToken
	 * @param context
	 * @param accounttoken
	 */
	public final void setAccountToken(com.mendix.systemwideinterfaces.core.IContext context, merge.proxies.LinkStatus accounttoken)
	{
		if (accounttoken != null)
			getMendixObject().setValue(context, MemberNames.AccountToken.toString(), accounttoken.toString());
		else
			getMendixObject().setValue(context, MemberNames.AccountToken.toString(), null);
	}

	/**
	 * @return value of LinkContext_MergeConfiguration
	 */
	public final merge.proxies.MergeConfiguration getLinkContext_MergeConfiguration() throws com.mendix.core.CoreException
	{
		return getLinkContext_MergeConfiguration(getContext());
	}

	/**
	 * @param context
	 * @return value of LinkContext_MergeConfiguration
	 */
	public final merge.proxies.MergeConfiguration getLinkContext_MergeConfiguration(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		merge.proxies.MergeConfiguration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LinkContext_MergeConfiguration.toString());
		if (identifier != null)
			result = merge.proxies.MergeConfiguration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LinkContext_MergeConfiguration
	 * @param linkcontext_mergeconfiguration
	 */
	public final void setLinkContext_MergeConfiguration(merge.proxies.MergeConfiguration linkcontext_mergeconfiguration)
	{
		setLinkContext_MergeConfiguration(getContext(), linkcontext_mergeconfiguration);
	}

	/**
	 * Set value of LinkContext_MergeConfiguration
	 * @param context
	 * @param linkcontext_mergeconfiguration
	 */
	public final void setLinkContext_MergeConfiguration(com.mendix.systemwideinterfaces.core.IContext context, merge.proxies.MergeConfiguration linkcontext_mergeconfiguration)
	{
		if (linkcontext_mergeconfiguration == null)
			getMendixObject().setValue(context, MemberNames.LinkContext_MergeConfiguration.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LinkContext_MergeConfiguration.toString(), linkcontext_mergeconfiguration.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return linkContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final merge.proxies.LinkContext that = (merge.proxies.LinkContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Merge.LinkContext";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
